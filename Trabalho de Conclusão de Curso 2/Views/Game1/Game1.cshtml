@model Trabalho_de_Conclusão_de_Curso_2.Models.Game1Model
@using Trabalho_de_Conclusão_de_Curso_2.Entities.Game1
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Privacy Policy";
    string sobrancelhas = JsonConvert.SerializeObject(Model.sobrancelhas);
    string olhos = JsonConvert.SerializeObject(Model.olhos);
    string bocas = JsonConvert.SerializeObject(Model.bocas);

    double peso1Azul = 0.5;
    double peso2Azul = 0.5;
    double peso3Azul = 0.5;
    double peso1Vermelho = -0.5;
    double peso2Vermelho = -0.5;
    double peso3Vermelho = -0.5;
    double peso1Verde = 0.5;
    double peso2Verde = 0.5;
    double peso3Verde = 0.5;
    List<SomaAtivacaoModel> somaAtivacoes = new List<SomaAtivacaoModel>();
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0," />

    <link rel="stylesheet" href="~/css/Game1/Game1.css" />

    <title>Game 1</title>
</head>

<body>

    <script src="https://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="~/js/Game1/Game1.js"></script>
    <div class="flex-box container-box">
        <div class="content-box">
            <div class="boneco">
                <div class="game-board" id="game-board">

                    <img src="~/Content/Game1/IArley/IArley.png" class="IArley" alt="Alternate Text" />

                    <div id="divSobrancelha">
                        <img src="~/Content/Game1/IArley/sobrancelha neutra.png" class="Sobrancelha" id="Sobrancelha" alt="Alternate Text" />
                    </div>

                    <div id="divOlhos">
                        <img src="~/Content/Game1/IArley/olhos neutro.png" class="Olhos" id="Olhos" alt="Alternate Text" />
                    </div>

                    <div>
                        <input type="image" src="~/Content/Game1/IArley/proximo-botao.png" border="0" onclick="mudarSobrancelha(@sobrancelhas)" style="position: absolute; top: 170px; left: 550px;" title="Mudar Sobrancelha" />
                    </div>

                    <div>
                        <input type="image" src="~/Content/Game1/IArley/proximo-botao.png" border="0" onclick="mudarOlhos(@olhos)" style="position: absolute; top: 238px; left: 550px;" title="Mudar Olhos" />
                    </div>

                    <div>
                        <input type="image" src="~/Content/Game1/IArley/proximo-botao.png" border="0" onclick="mudarBoca(@bocas)" style="position: absolute; top: 385px; left: 550px;" title="Mudar Boca" />
                    </div>
                    <div id="divBoca">
                        <img src="~/Content/Game1/IArley/boca neutra.png" class="Boca" id="Boca" alt="Alternate Text" />
                    </div>
                </div>
            </div>

            <div class="future">
                <h2>Content</h2>
            </div>
        </div>
    </div>
    <div class="flex-box RedeETabela">
        <div class="Rede">
            <div class="flex-box container-box">
                <div class="imagem">
                    <div class="sobrancelhaEntry">
                        000
                    </div>
                    <div class="olhosEntry">
                        000
                    </div>

                    <div class="bocaEntry">
                        000
                    </div>
                    <div class="peso1Azul">
                        @peso1Azul
                    </div>
                    <div class="peso1Vermelho">
                        @peso2Azul
                    </div>
                    <div class="peso1Verde">
                        @peso3Azul
                    </div>
                    <div class="peso2Azul">
                        @peso1Vermelho
                    </div>
                    <div class="peso2Vermelho">
                        @peso2Vermelho
                    </div>
                    <div class="peso2Verde">
                        @peso3Vermelho
                    </div>
                    <div class="peso3Azul">
                        @peso1Verde
                    </div>
                    <div class="peso3Vermelho">
                        @peso2Verde
                    </div>
                    <div class="peso3Verde">
                        @peso3Verde
                    </div>
                    <div class="peso1Preto">
                        000
                    </div>
                    <div class="peso2Preto">
                        000
                    </div>
                    <div class="peso3Preto">
                        000
                    </div>
                    <div class="somaAtivacaoN1">
                        Soma=
                        <br>
                        Ativação=
                    </div>
                    <div class="somaAtivacaoN2">
                        Soma=
                        <br>
                        Ativação=
                    </div>
                    <div class="somaAtivacaoN3">
                        Soma=
                        <br>
                        Ativação=
                    </div>
                </div>
            </div>
        </div>


    </div>

    <div class="table treinamento">
        <table border="1">
            <h2>Treinamento</h2>
            <tr>
                <td>Sobrancelhas</td>
                <td>Olhos</td>
                <td>Boca</td>
                <td>Humor</td>
                @foreach (IArleyTraining t in Model.training)
                {
                <tr>
                    <td>@t.Sobrancelha</td>
                    <td>@t.Olhos</td>
                    <td>@t.Boca</td>
                    <td>@t.Humor</td>
                </tr>
            }

            </table>

        </div>

    </body>
@for (int i = 0; i < Model.training.Count; i++)
{
    SomaAtivacaoModel model = new SomaAtivacaoModel { IndexList = i };
    IArleyTraining t = Model.training[i];
    double somaAzul = (t.Sobrancelha * peso1Azul) + (t.Olhos * peso2Azul) + (t.Boca * peso3Azul);
    double sigmoideAzul = 1 / (1 + (Math.Pow(2.77,-somaAzul)));
    Result result = new Result { soma = somaAzul, cor = "Azul", ativacao=sigmoideAzul };
    model.somasEAtivacoes.Add(result);


    double somaVermelho = (t.Sobrancelha * peso1Vermelho) + (t.Olhos * peso2Vermelho) + (t.Boca * peso3Vermelho);
    double sigmoideVermelho = 1 / (1 + (Math.Pow(2.77, -somaVermelho)));
    result = new Result { soma = somaVermelho, cor = "Vermelho", ativacao = sigmoideVermelho };
    model.somasEAtivacoes.Add(result);



    double somaVerde = (t.Sobrancelha * peso1Verde) + (t.Olhos * peso2Verde) + (t.Boca * peso3Verde);
    double sigmoideVerde = 1 / (1 + (Math.Pow(2.77, -somaVerde)));
    result = new Result { soma = somaVerde, cor = "Verde", ativacao = sigmoideVerde };
    model.somasEAtivacoes.Add(result);

}
